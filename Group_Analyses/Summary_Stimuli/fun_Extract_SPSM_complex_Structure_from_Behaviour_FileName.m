function SPSMStruct = fun_Extract_SPSM_complex_Structure_from_Behaviour_FileName(FileName)
% input: FileName of the Behaviour csv file
% output: Two strings describe the stimuli.


% Extract structure of Odour part and light part seperately, then extract
% Splus and SMinus (Odour and light)
SPSMStruct.SP_Odour = "";
SPSMStruct.SM_Odour = "";


idcs   = strfind(FileName,'_');
Training_Date = FileName((idcs(1)-2):(idcs(1)-1));  % The number of training day is the part after the first unserscore
Training_Date =  erase( Training_Date , 'y' );
Stimuli0 = FileName(idcs(1)+1:idcs(2)-1);   % The stimuli is the part after the first unserscore
% check_light = 0;
% odour_checked = 0;
%% odour part
% for odour, we don't need to check the light command (and there should be no command if we run the dummy.vi)
if contains(FileName,'MV')
    SPSMStruct.SP_Odour = "Methyl Valerate";
    SPSMStruct.SM_Odour =  "Methyl Valerate";

end
if contains(FileName,'MT')
    SPSMStruct.SP_Odour = "Methyl Tiglate";
    SPSMStruct.SM_Odour =  "Methyl Tiglate";

end
if contains(Stimuli0,'Odour')
    Stimuli_Type = 'Odour';
    Stimuli = Stimuli0;
    OdourPairName = extractAfter(Stimuli,"Odour");
    [SPlusName, SMinusName] = Sp_SM_Odour(OdourPairName);
    SPSMStruct.SP_Odour = SPlusName;
    SPSMStruct.SM_Odour =  SMinusName;

    if contains(FileName,'noodour')
        SPSMStruct.SP_Odour = "";
        SPSMStruct.SM_Odour =  "";
        %         check_light = 1;
    end
    %     odour_checked = 1;
end


%% for light
% if ~odour_checked || check_light

stim0 = fun_SPSM_FileName2Struct_complex_str(FileName);
[structure0, structure1, structure2] = fun_Stim_Struct_2_complex_str(stim0);

%     light_Info = parse_training_info_test(FileName);
%     Stimuli_Type = 'Light';
%     if contains(FileName,'vs0') || contains(FileName,'v0')
%         Stimuli = 'Detection';% should be odour pair or light(Light detection intensity wi/wo odour, Light discrimination wi/wo odour)
%     else
%         Stimuli = 'Discrimination';
%         %         phase_name = asManyOfPattern(digitsPattern(1))+ 'ms'+'vs'+ asManyOfPattern(digitsPattern(1));
%         %         phase_pattern = namedPattern(phase_name);
%         %         extract(Stimuli0,phase_pattern)
%         if contains(FileName,'Delay')
%             Stimuli = 'Phase';
%         end
%         if contains(FileName,'Reverse')
%             Stimuli = 'Reverse';
%         end
%
%     end
%     if contains(FileName,'mW')
%         idcs   = strfind(FileName,'mW');
%         Stimuli = [Stimuli FileName(idcs(1)-3:idcs(1)+1)];
%         Stimuli =  erase( Stimuli , '_' );
%     else
%         Stimuli =  'noLight';
%     end
% else

% end
% Result_Title = sprintf('Day%s_%s',Training_Date, Stimuli)
structure1 = renameFields(structure1, "SP_");
structure2 = renameFields(structure2, "SM_");
t1 = struct2table(SPSMStruct);
t2 = struct2table(structure0);
t3 = struct2table(structure1);
t4 = struct2table(structure2);
% Concatenate the tables
newTable = [t1, t2, t3, t4];

% Convert the table back to a structure
SPSMStruct = table2struct(newTable);

end
function [SPlusName, SMinusName] = Sp_SM_Odour(OdourPairName0)
OdourPairName = str2num(OdourPairName0);
switch OdourPairName
    case(1)
        SPlusName = "Ethyl Butyrate";
        SMinusName = "Methyl Tiglate";
    case(2)
        SPlusName = "Butyl Acetate";
        SMinusName = "Acetophenone";
    case(3)
        SPlusName = "Ethyl Tiglate";
        SMinusName = "Salicylaldehyde";
    case(4)
        SPlusName = "Butyl Butyrate";
        SMinusName = "Eugenol";
    case(5)
        SPlusName = "Methyl Valerate";
        SMinusName = "Methyl Butyrate";
    case(6)
        SPlusName = "Methyl Anthranilate";
        SMinusName = "Methyl Salicylate";
end
end


function newStruct = renameFields(oldStruct, strbefore)
%RENAMESFIELDS Renames fields of a structure.
%   NEWSTRUCT = RENAMEFIELDS(OLDSTRUCT) returns a new structure with the
%   same data as OLDSTRUCT but with the field names replaced by new field
%   names generated by adding 'AAA' at the beginning of the old names.

oldNames = fieldnames(oldStruct);
newStruct = oldStruct;
for i = 1:numel(oldNames)
    newName = strcat(strbefore, oldNames{i});
    newStruct.(newName) = oldStruct.(oldNames{i});
    if ~strcmp(oldNames{i}, newName)
        newStruct = rmfield(newStruct, oldNames{i});
    end
end
end