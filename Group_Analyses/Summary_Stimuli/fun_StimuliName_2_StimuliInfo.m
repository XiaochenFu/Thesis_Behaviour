function StimuliInfo = fun_StimuliName_2_StimuliInfo(StimuliName, BatchID)
switch BatchID
%     case 
    case 13
        switch StimuliName
            case 'Detection_25mW'
                NumPulse = '5vs0';
                Intensity = 25;
                PulseWidth = 5;
                PulseFrequency = 50;
                DelayLatency  = '20vs20';
                ReverseStimuli = 0;
                SPSMStruct.SP_Odour = "";
                SPSMStruct.SM_Odour = "";
            otherwise
                error('Please check stimuli name and batch id')
        end
end


light_Info = struct( 'NumPulse', NumPulse, 'Intensity', Intensity, 'PulseWidth', PulseWidth, 'PulseFrequency', PulseFrequency, 'DelayLatency', DelayLatency, 'ReverseStimuli', ReverseStimuli);
[structure0, structure1, structure2] = fun_Stim_Struct_2_complex_str(light_Info);
structure1 = renameFields(structure1, "SP_");
structure2 = renameFields(structure2, "SM_");
t1 = struct2table(SPSMStruct);
t2 = struct2table(structure0);
t3 = struct2table(structure1);
t4 = struct2table(structure2);
% Concatenate the tables
newTable = [t1, t2, t3, t4];

% Convert the table back to a structure
StimuliInfo = table2struct(newTable);
end
function newStruct = renameFields(oldStruct, strbefore)
%RENAMESFIELDS Renames fields of a structure.
%   NEWSTRUCT = RENAMEFIELDS(OLDSTRUCT) returns a new structure with the
%   same data as OLDSTRUCT but with the field names replaced by new field
%   names generated by adding 'AAA' at the beginning of the old names.

oldNames = fieldnames(oldStruct);
newStruct = oldStruct;
for i = 1:numel(oldNames)
    newName = strcat(strbefore, oldNames{i});
    newStruct.(newName) = oldStruct.(oldNames{i});
    if ~strcmp(oldNames{i}, newName)
        newStruct = rmfield(newStruct, oldNames{i});
    end
end
end